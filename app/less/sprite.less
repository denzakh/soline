/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-search-name: 'icon-search';
@icon-search-x: 0px;
@icon-search-y: 0px;
@icon-search-offset-x: 0px;
@icon-search-offset-y: 0px;
@icon-search-width: 12px;
@icon-search-height: 12px;
@icon-search-total-width: 39px;
@icon-search-total-height: 31px;
@icon-search-image: '../img/sprite.png';
@icon-search: 0px 0px 0px 0px 12px 12px 39px 31px '../img/sprite.png' 'icon-search';
@icon-social-fb-name: 'icon-social-fb';
@icon-social-fb-x: 32px;
@icon-social-fb-y: 0px;
@icon-social-fb-offset-x: -32px;
@icon-social-fb-offset-y: 0px;
@icon-social-fb-width: 7px;
@icon-social-fb-height: 12px;
@icon-social-fb-total-width: 39px;
@icon-social-fb-total-height: 31px;
@icon-social-fb-image: '../img/sprite.png';
@icon-social-fb: 32px 0px -32px 0px 7px 12px 39px 31px '../img/sprite.png' 'icon-social-fb';
@icon-social-in-name: 'icon-social-in';
@icon-social-in-x: 12px;
@icon-social-in-y: 0px;
@icon-social-in-offset-x: -12px;
@icon-social-in-offset-y: 0px;
@icon-social-in-width: 12px;
@icon-social-in-height: 12px;
@icon-social-in-total-width: 39px;
@icon-social-in-total-height: 31px;
@icon-social-in-image: '../img/sprite.png';
@icon-social-in: 12px 0px -12px 0px 12px 12px 39px 31px '../img/sprite.png' 'icon-social-in';
@icon-social-ok-name: 'icon-social-ok';
@icon-social-ok-x: 24px;
@icon-social-ok-y: 0px;
@icon-social-ok-offset-x: -24px;
@icon-social-ok-offset-y: 0px;
@icon-social-ok-width: 8px;
@icon-social-ok-height: 15px;
@icon-social-ok-total-width: 39px;
@icon-social-ok-total-height: 31px;
@icon-social-ok-image: '../img/sprite.png';
@icon-social-ok: 24px 0px -24px 0px 8px 15px 39px 31px '../img/sprite.png' 'icon-social-ok';
@icon-social-tw-name: 'icon-social-tw';
@icon-social-tw-x: 0px;
@icon-social-tw-y: 12px;
@icon-social-tw-offset-x: 0px;
@icon-social-tw-offset-y: -12px;
@icon-social-tw-width: 11px;
@icon-social-tw-height: 11px;
@icon-social-tw-total-width: 39px;
@icon-social-tw-total-height: 31px;
@icon-social-tw-image: '../img/sprite.png';
@icon-social-tw: 0px 12px 0px -12px 11px 11px 39px 31px '../img/sprite.png' 'icon-social-tw';
@icon-social-vk-name: 'icon-social-vk';
@icon-social-vk-x: 0px;
@icon-social-vk-y: 23px;
@icon-social-vk-offset-x: 0px;
@icon-social-vk-offset-y: -23px;
@icon-social-vk-width: 15px;
@icon-social-vk-height: 8px;
@icon-social-vk-total-width: 39px;
@icon-social-vk-total-height: 31px;
@icon-social-vk-image: '../img/sprite.png';
@icon-social-vk: 0px 23px 0px -23px 15px 8px 39px 31px '../img/sprite.png' 'icon-social-vk';
@spritesheet-width: 39px;
@spritesheet-height: 31px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @icon-search @icon-social-fb @icon-social-in @icon-social-ok @icon-social-tw @icon-social-vk;
@spritesheet: 39px 31px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
